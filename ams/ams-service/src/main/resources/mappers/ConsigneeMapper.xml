<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zb.fincore.ams.service.dal.dao.ConsigneeDao">
    <resultMap id="BaseResultMap" type="com.zb.fincore.ams.service.dal.model.Consignee">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="consignee_code" property="consigneeCode" jdbcType="VARCHAR"/>
        <result column="consignee_name" property="consigneeName" jdbcType="VARCHAR"/>
        <result column="cert_type" property="certType" jdbcType="TINYINT"/>
        <result column="cert_no" property="certNo" jdbcType="VARCHAR"/>
        <result column="registered_capital" property="registeredCapital" jdbcType="DECIMAL"/>
        <result column="consignee_address" property="consigneeAddress" jdbcType="VARCHAR"/>
        <result column="legal_person_name" property="legalPersonName" jdbcType="VARCHAR"/>
        <result column="legal_person_cert_no" property="legalPersonCertNo" jdbcType="VARCHAR"/>
        <result column="business_scope" property="businessScope" jdbcType="LONGVARCHAR"/>
        <result column="introduction" property="introduction" jdbcType="LONGVARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="create_by" property="createBy" jdbcType="VARCHAR"/>
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP"/>
        <result column="modify_by" property="modifyBy" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, consignee_code, consignee_name, cert_type, cert_no, registered_capital, consignee_address,
        legal_person_name, legal_person_cert_no, business_scope, introduction, create_time, create_by, modify_time,
        modify_by
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from ams_consignee
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from ams_consignee
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.zb.fincore.ams.service.dal.model.Consignee"
            useGeneratedKeys="true" keyProperty="id">
        insert into ams_consignee (consignee_code, consignee_name,
        cert_type, cert_no, registered_capital,
        consignee_address, legal_person_name, legal_person_cert_no,business_scope, introduction,
        create_by, modify_by
        )
        values (#{consigneeCode,jdbcType=VARCHAR}, #{consigneeName,jdbcType=VARCHAR},
        #{certType,jdbcType=TINYINT}, #{certNo,jdbcType=VARCHAR}, #{registeredCapital,jdbcType=DECIMAL},
        #{consigneeAddress,jdbcType=VARCHAR}, #{legalPersonName,jdbcType=VARCHAR},
        #{legalPersonCertNo,jdbcType=VARCHAR},#{businessScope,jdbcType=LONGVARCHAR},
        #{introduction,jdbcType=LONGVARCHAR},
        #{createBy,jdbcType=VARCHAR}, #{modifyBy,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.zb.fincore.ams.service.dal.model.Consignee"
            useGeneratedKeys="true" keyProperty="id">
        insert into ams_consignee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="consigneeCode != null">
                consignee_code,
            </if>
            <if test="consigneeName != null">
                consignee_name,
            </if>
            <if test="certType != null">
                cert_type,
            </if>
            <if test="certNo != null">
                cert_no,
            </if>
            <if test="registeredCapital != null">
                registered_capital,
            </if>
            <if test="consigneeAddress != null">
                consignee_address,
            </if>
            <if test="legalPersonName != null">
                legal_person_name,
            </if>
            <if test="legalPersonCertNo != null">
                legal_person_cert_no,
            </if>
            <if test="businessScope != null">
                business_scope,
            </if>
            <if test="introduction != null">
                introduction,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="modifyBy != null">
                modify_by,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="consigneeCode != null">
                #{consigneeCode,jdbcType=VARCHAR},
            </if>
            <if test="consigneeName != null">
                #{consigneeName,jdbcType=VARCHAR},
            </if>
            <if test="certType != null">
                #{certType,jdbcType=TINYINT},
            </if>
            <if test="certNo != null">
                #{certNo,jdbcType=VARCHAR},
            </if>
            <if test="registeredCapital != null">
                #{registeredCapital,jdbcType=DECIMAL},
            </if>
            <if test="consigneeAddress != null">
                #{consigneeAddress,jdbcType=VARCHAR},
            </if>
            <if test="legalPersonName != null">
                #{legalPersonName,jdbcType=VARCHAR},
            </if>
            <if test="legalPersonCertNo != null">
                #{legalPersonCertNo,jdbcType=VARCHAR},
            </if>
            <if test="businessScope != null">
                #{businessScope,jdbcType=LONGVARCHAR},
            </if>
            <if test="introduction != null">
                #{introduction,jdbcType=LONGVARCHAR},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="modifyBy != null">
                #{modifyBy,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.zb.fincore.ams.service.dal.model.Consignee">
        update ams_consignee
        <set>
            <if test="consigneeCode != null">
                consignee_code = #{consigneeCode,jdbcType=VARCHAR},
            </if>
            <if test="consigneeName != null">
                consignee_name = #{consigneeName,jdbcType=VARCHAR},
            </if>
            <if test="certType != null">
                cert_type = #{certType,jdbcType=TINYINT},
            </if>
            <if test="certNo != null">
                cert_no = #{certNo,jdbcType=VARCHAR},
            </if>
            <if test="registeredCapital != null">
                registered_capital = #{registeredCapital,jdbcType=DECIMAL},
            </if>
            <if test="consigneeAddress != null">
                consignee_address = #{consigneeAddress,jdbcType=VARCHAR},
            </if>
            <if test="legalPersonName != null">
                legal_person_name = #{legalPersonName,jdbcType=VARCHAR},
            </if>
            <if test="legalPersonCertNo != null">
                legal_person_cert_no = #{legalPersonCertNo,jdbcType=VARCHAR},
            </if>
            <if test="businessScope != null">
                business_scope = #{businessScope,jdbcType=LONGVARCHAR},
            </if>
            <if test="introduction != null">
                introduction = #{introduction,jdbcType=LONGVARCHAR},
            </if>
            <if test="modifyBy != null">
                modify_by = #{modifyBy,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zb.fincore.ams.service.dal.model.Consignee">
        update ams_consignee
        set consignee_code = #{consigneeCode,jdbcType=VARCHAR},
        consignee_name = #{consigneeName,jdbcType=VARCHAR},
        cert_type = #{certType,jdbcType=TINYINT},
        cert_no = #{certNo,jdbcType=VARCHAR},
        registered_capital = #{registeredCapital,jdbcType=DECIMAL},
        consignee_address = #{consigneeAddress,jdbcType=VARCHAR},
        legal_person_name = #{legalPersonName,jdbcType=VARCHAR},
        legal_person_cert_no = #{legalPersonCertNo,jdbcType=VARCHAR},
        business_scope = #{businessScope,jdbcType=LONGVARCHAR},
        introduction = #{introduction,jdbcType=LONGVARCHAR},
        modify_by = #{modifyBy,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>